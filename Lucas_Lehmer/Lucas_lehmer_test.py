#funkce Is_mersenne(n) n치m po캜칤t치 kolik치t칳m Mersennov칳m 캜칤slem je zvolen칠 캜칤slo v parametru n
def Is_Mersenne(n):
    i=2

    count=1
    #while cyklus po캜칤taj칤c칤 Mersennova 캜칤sla a porovn치v치 je s 캜칤slem n, pokud jsou stejn치
    #vr치t칤 se um칤st캩n칤 캜칤sla n mez칤 Mersennov칳mi 캜칤sly
    while i < n:
        i=pow(2,count)-1

        if (i == n):

            return count
        count+=1
    return 0
#funkce pro Lucas-Lehmer콢v test prvo캜칤selnosti Mersennov칳ch 캜칤sel
def Mersenne_num_primality_test(n):

    #podm칤nka ur캜uj칤c칤 zda zvolen칠 캜칤slo n je Mersennov칳m 캜칤slem, pokud ne vr치t칤 se hodnota False.
    if Is_Mersenne(n)==0:
        return False

    else:
        s_1=4
        s_2=4
        #V칳po캜et 洧녡_n-2 pomoc칤 vzorce s_n = (s_(n-1))^2 -2 kde s_1 = 4
        for i in range (1,Is_Mersenne(n)-1):
            s_1=s_2
            s_2=pow(s_1,2)-2

        #Pokud s_(n-2) % n jedn치 se o prvo캜칤slo
        if s_2%n ==0:

            return True
        else:
            return False
